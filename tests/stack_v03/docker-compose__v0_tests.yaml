version: '3.2'
services:

  ## Service NodeExporter :: Metrics Gathering (from current host)
  node-exporter:
    hostname: monitoring
    image: prom/node-exporter
    ports:
      - 127.0.0.1:9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      #- "--web.telemetry-path=/metrics"                  ## default endpoint for "metrics" :: http://127.0.0.1:9100/metrics
      #- "--web.telemetry-path=/"                         ## expose metrics on :: https://srv.dotspace.ru/mon/exporter/
      #- --web.telemetry-path=/exporter/metrics/          ## expose metrics on :: https://srv.dotspace.ru/exporter/metrics/
      #- "--web.telemetry-path=/mon/exporter/metrics/"    ## expose metrics on :: https://srv.dotspace.ru/mon/exporter/metrics/
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    restart: always

  ## Service Prometheus :: Metrics Collecting, Storing and Processing
  prometheus:
    hostname: prometheus
    image: prom/prometheus:latest
    ports:
      - 127.0.0.1:9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--web.external-url=/mon/prom"
      - "--web.route-prefix=/"
    depends_on:
      - node-exporter
    restart: always


  ## Service AlertManager :: Metrics Changes Triggering and Sending Alerts
  alertmanager:
    image: prom/alertmanager:v0.21.0    ## neeeds extrenal Telegram-notification Service :: AlertManagerBot
    #image: prom/alertmanager:v0.26.0   ## built-in Telegram-notification Service
    #image: prom/alertmanager:latest    ## AlertManager v0.24+ has built-in Telegram-notification 
    ports:
      - 127.0.0.1:9093:9093
    volumes:
      - ./alertmanager:/etc/alertmanager
    #
    #environment:
    #    TZ: "Asia/Omsk"
    #    GMAIL_LOGIN: "devops.dotspace@gmail.com"
    #
    command:
      #- --config.file=/etc/alertmanager/config.yaml
      #- --storage.path=/etc/alertmanager/data
      #- --config.file=/etc/alertmanager/alertmanager.yaml
      #- --config.file=/etc/alertmanager/alertmanager__v22.yaml
      - --config.file=/etc/alertmanager/alertmanager__v1.yaml
      - --storage.path=/alertmanager/data
    depends_on:
      - prometheus
    restart: always

  ## Service AlertManagerBot [DEPRICATED since 2022.08.15 | Reason: Alertmanager v0.24+ has Telegram support out of the box]
  ## https://github.com/metalmatze/alertmanager-bot
  #
  alertmanager-bot:
    image: metalmatze/alertmanager-bot:0.4.3
    volumes:
      - ./data:/data
    command:
      - --alertmanager.url=http://alertmanager:9093
      - --log.level=info
      - --store=bolt
      - --bolt.path=/data/bot.db
    environment:
      ##..inline secrets
      #TELEGRAM_ADMIN: "764..499"
      #TELEGRAM_TOKEN: 584..0MY
      #
      ##..secrets v1.1 from file (doesn't work for AlertmanagerBot)
      #TELEGRAM_ADMIN_FILE: /run/secrets/sec_tg_id
      #TELEGRAM_TOKEN_FILE: /run/secrets/sec_tg_token
      #
      ##..secrets v1.2 from file (doesnt work for AlertmanagerBot)
      #TELEGRAM_ADMIN: /run/secrets/sec_tg_id
      #TELEGRAM_TOKEN: /run/secrets/sec_tg_token
      #
      ##..secrets v1.3 from file (doesn't work for AlertmanagerBot)
      #TELEGRAM_ADMIN: sec_tg_id
      #TELEGRAM_TOKEN: sec_tg_token
      #
      ##..secrets v2.1 from evn var (works fine)
      TELEGRAM_ADMIN: "${TELEGRAM_ADMIN}"
      TELEGRAM_TOKEN: "${TELEGRAM_TOKEN}"
      #
    ##..secrets v1
    #secrets:
    #  - sec_tg_id
    #  - sec_tg_token
    #
    ##..secrets v2 :: from env var
    ##  *echo $TELEGRAM_ADMIN
    ##  *echo $TELEGRAM_TOKEN
    #
    #secrets:
    #  - sec_tg_id:
    #    external: true
    #    name: "${TELEGRAM_ADMIN}"
    #  - sec_tg_token:
    #    external: true
    #    name: "${TELEGRAM_TOKEN}"
    #
    restart: always


## Define Secret(s) source(s)
#
##..v1.1 :: Doesnt work for AlertManagerBot
#secrets:
#  sec_tg_id:
#    file: _protected/sec_tg_id.txt
#  sec_tg_token:
#    file: _protected/sec_tg_token.txt

##..v1.2
#secrets:
#  sec_tg_id:
#    external: true
#    file: _protected/sec_tg_id.txt
#  sec_tg_token:
#    external: true
#    file: _protected/sec_tg_token.txt
#
## ERROR :: unsupported external secret sec_tg_id
#


##=LINKS
##
##  1.  Protect Secrets in Docker Compose configuration
##      https://docs.docker.com/compose/use-secrets/
##      https://docs.docker.com/compose/compose-file/09-secrets/
##      https://docs.docker.com/compose/compose-file/05-services/#secrets
##      https://github.com/docker/awesome-compose/blob/master/spring-postgres/compose.yaml
##